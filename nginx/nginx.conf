events {
  worker_connections  1024;
}

http {
    access_log /logs/access.log combined;
    error_log /logs/errors.log info;

    keepalive_timeout 65;
    keepalive_requests 100;

    server {
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    upstream backend {
        server olgram1:80;
        server olgram2:80;
        keepalive 32;
    }

    # Default server (mock)
    server {
        listen       443  ssl;
        http2 on;
        server_name  _; # some invalid name that won't match anything
        ssl_certificate      /cert/dummy.crt;
        ssl_certificate_key  /cert/dummy.key;
        return       444;
    }

    server {
        # Old olgram
        listen       443 ssl;
        http2 on;
        server_name  (OLDDOMAIN);
        ssl_certificate      /cert/old.crt;
        ssl_certificate_key  /cert/old.key;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        # New olgram
        listen       443 ssl;
        http2 on;
        server_name  (NEWDOMAIN);
        ssl_certificate      /cert/new.crt;
        ssl_certificate_key  /cert/new.key;

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
